"use strict";(self.webpackChunksit_fuse_website=self.webpackChunksit_fuse_website||[]).push([[9862],{5988:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"installation/setup","title":"Installation Guide","description":"This guide will walk you through installing SIT-FUSE on your system.","source":"@site/docs/installation/setup.md","sourceDirName":"installation","slug":"/installation/setup","permalink":"/SIT_FUSE/docs/installation/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/yunks128/SIT_FUSE/tree/main/docs/docs/installation/setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"System Requirements","permalink":"/SIT_FUSE/docs/installation/requirements"},"next":{"title":"Wildfire Detection Tutorial","permalink":"/SIT_FUSE/docs/tutorials/wildfire-detection"}}');var t=i(4848),l=i(8453);const o={},r="Installation Guide",a={},c=[{value:"Quick Start",id:"quick-start",level:2},{value:"Installation Methods",id:"installation-methods",level:2},{value:"Method 1: From Source (Recommended for Development)",id:"method-1-from-source-recommended-for-development",level:3},{value:"Method 2: From PyPI (Coming Soon)",id:"method-2-from-pypi-coming-soon",level:3},{value:"Method 3: Docker Installation",id:"method-3-docker-installation",level:3},{value:"Environment Setup",id:"environment-setup",level:2},{value:"1. Create Conda Environment",id:"1-create-conda-environment",level:3},{value:"2. Install PyTorch",id:"2-install-pytorch",level:3},{value:"For CUDA 11.8 (Recommended)",id:"for-cuda-118-recommended",level:4},{value:"For CUDA 12.0",id:"for-cuda-120",level:4},{value:"For CPU Only",id:"for-cpu-only",level:4},{value:"For Apple Silicon (M1/M2)",id:"for-apple-silicon-m1m2",level:4},{value:"3. Install SIT-FUSE",id:"3-install-sit-fuse",level:3},{value:"Verification",id:"verification",level:2},{value:"Test Basic Installation",id:"test-basic-installation",level:3},{value:"Run Example Script",id:"run-example-script",level:3},{value:"Configuration",id:"configuration",level:2},{value:"1. Environment Variables",id:"1-environment-variables",level:3},{value:"2. Configuration File",id:"2-configuration-file",level:3},{value:"3. Jupyter Notebook Setup",id:"3-jupyter-notebook-setup",level:3},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"CUDA Issues",id:"cuda-issues",level:3},{value:"Dependency Conflicts",id:"dependency-conflicts",level:3},{value:"Data Access Issues",id:"data-access-issues",level:3},{value:"Import Errors",id:"import-errors",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Development Installation",id:"development-installation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"installation-guide",children:"Installation Guide"})}),"\n",(0,t.jsx)(n.p,{children:"This guide will walk you through installing SIT-FUSE on your system."}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.p,{children:"For most users, the quickest way to get started is with conda:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create a new conda environment\nconda create -n sit-fuse python=3.9\n\n# Activate the environment\nconda activate sit-fuse\n\n# Install SIT-FUSE\npip install git+https://github.com/yunks128/SIT_FUSE.git\n"})}),"\n",(0,t.jsx)(n.h2,{id:"installation-methods",children:"Installation Methods"}),"\n",(0,t.jsx)(n.h3,{id:"method-1-from-source-recommended-for-development",children:"Method 1: From Source (Recommended for Development)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/yunks128/SIT_FUSE.git\ncd SIT_FUSE\n\n# Create and activate conda environment\nconda create -n sit-fuse python=3.9\nconda activate sit-fuse\n\n# Install dependencies\npip install -r requirements.txt\n\n# Install SIT-FUSE in development mode\npip install -e .\n"})}),"\n",(0,t.jsx)(n.h3,{id:"method-2-from-pypi-coming-soon",children:"Method 2: From PyPI (Coming Soon)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create conda environment\nconda create -n sit-fuse python=3.9\nconda activate sit-fuse\n\n# Install from PyPI\npip install sit-fuse\n"})}),"\n",(0,t.jsx)(n.h3,{id:"method-3-docker-installation",children:"Method 3: Docker Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Pull the Docker image\ndocker pull yunks128/sit-fuse:latest\n\n# Run a container\ndocker run -it --gpus all -v $(pwd):/workspace yunks128/sit-fuse:latest\n"})}),"\n",(0,t.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsx)(n.h3,{id:"1-create-conda-environment",children:"1. Create Conda Environment"}),"\n",(0,t.jsx)(n.p,{children:"We recommend using conda to manage dependencies:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create environment with Python 3.9\nconda create -n sit-fuse python=3.9 -y\n\n# Activate environment\nconda activate sit-fuse\n\n# Install conda packages\nconda install -c conda-forge \\\n    numpy scipy scikit-learn \\\n    opencv pillow matplotlib \\\n    rasterio geopandas xarray \\\n    jupyterlab ipykernel -y\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-install-pytorch",children:"2. Install PyTorch"}),"\n",(0,t.jsx)(n.p,{children:"Choose the appropriate PyTorch installation based on your system:"}),"\n",(0,t.jsx)(n.h4,{id:"for-cuda-118-recommended",children:"For CUDA 11.8 (Recommended)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n"})}),"\n",(0,t.jsx)(n.h4,{id:"for-cuda-120",children:"For CUDA 12.0"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121\n"})}),"\n",(0,t.jsx)(n.h4,{id:"for-cpu-only",children:"For CPU Only"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu\n"})}),"\n",(0,t.jsx)(n.h4,{id:"for-apple-silicon-m1m2",children:"For Apple Silicon (M1/M2)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install torch torchvision torchaudio\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-install-sit-fuse",children:"3. Install SIT-FUSE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install from GitHub\npip install git+https://github.com/yunks128/SIT_FUSE.git\n\n# Or install from local clone\ngit clone https://github.com/yunks128/SIT_FUSE.git\ncd SIT_FUSE\npip install -e .\n"})}),"\n",(0,t.jsx)(n.h2,{id:"verification",children:"Verification"}),"\n",(0,t.jsx)(n.h3,{id:"test-basic-installation",children:"Test Basic Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import sit_fuse\nprint(f"SIT-FUSE version: {sit_fuse.__version__}")\n\n# Check GPU availability\nimport torch\nprint(f"CUDA available: {torch.cuda.is_available()}")\nif torch.cuda.is_available():\n    print(f"GPU device: {torch.cuda.get_device_name(0)}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"run-example-script",children:"Run Example Script"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Download and run a simple example\nfrom sit_fuse.examples import wildfire_detection\nwildfire_detection.run_simple_example()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"1-environment-variables",children:"1. Environment Variables"}),"\n",(0,t.jsx)(n.p,{children:"Set up necessary environment variables in your shell profile:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Add to ~/.bashrc or ~/.zshrc\nexport EARTHDATA_USERNAME="your_username"\nexport EARTHDATA_PASSWORD="your_password"\nexport CUDA_VISIBLE_DEVICES="0"  # GPU device to use\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-configuration-file",children:"2. Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["Create a configuration file at ",(0,t.jsx)(n.code,{children:"~/.sit_fuse/config.yaml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# SIT-FUSE Configuration\ndata:\n  cache_dir: "~/sit_fuse_data"\n  temp_dir: "/tmp/sit_fuse"\n  \nprocessing:\n  num_workers: 4\n  batch_size: 16\n  use_gpu: true\n  \ncredentials:\n  earthdata_username: "${EARTHDATA_USERNAME}"\n  earthdata_password: "${EARTHDATA_PASSWORD}"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-jupyter-notebook-setup",children:"3. Jupyter Notebook Setup"}),"\n",(0,t.jsx)(n.p,{children:"To use SIT-FUSE in Jupyter notebooks:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Install ipykernel in the sit-fuse environment\nconda activate sit-fuse\npython -m ipykernel install --user --name sit-fuse --display-name "SIT-FUSE"\n\n# Start Jupyter Lab\njupyter lab\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,t.jsx)(n.h3,{id:"cuda-issues",children:"CUDA Issues"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": CUDA out of memory errors"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"RuntimeError: CUDA out of memory\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Reduce batch size or use gradient checkpointing:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# In your config or code\nconfig.training.batch_size = 8  # Reduce from default 16\nconfig.training.gradient_checkpointing = True\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dependency-conflicts",children:"Dependency Conflicts"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Package version conflicts"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ERROR: pip's dependency resolver does not currently take into account all the packages that are installed\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Use conda for major packages, pip for others:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install major scientific packages with conda first\nconda install numpy scipy scikit-learn matplotlib -y\n# Then install SIT-FUSE with pip\npip install git+https://github.com/yunks128/SIT_FUSE.git\n"})}),"\n",(0,t.jsx)(n.h3,{id:"data-access-issues",children:"Data Access Issues"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Cannot download satellite data"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"HTTP Error 401: Unauthorized\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Verify your credentials:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from sit_fuse.data import verify_credentials\nverify_credentials()  # This will test your data access\n"})}),"\n",(0,t.jsx)(n.h3,{id:"import-errors",children:"Import Errors"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Cannot import SIT-FUSE modules"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ModuleNotFoundError: No module named 'sit_fuse'\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution"}),": Verify installation and environment:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check if sit-fuse is installed\npip list | grep sit-fuse\n\n# Verify you're in the right environment\nconda env list\n\n# Reinstall if necessary\npip uninstall sit-fuse\npip install git+https://github.com/yunks128/SIT_FUSE.git\n"})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"Once installation is complete:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\ud83d\udcd6 ",(0,t.jsxs)(n.strong,{children:["Read the ",(0,t.jsx)(n.a,{href:"/SIT_FUSE/docs/introduction/key-concepts",children:"Key Concepts"})]})," to understand SIT-FUSE fundamentals"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udd25 ",(0,t.jsxs)(n.strong,{children:["Try the ",(0,t.jsx)(n.a,{href:"/SIT_FUSE/docs/tutorials/wildfire-detection",children:"Wildfire Detection Tutorial"})]})," for a hands-on introduction"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83c\udf0a ",(0,t.jsxs)(n.strong,{children:["Explore ",(0,t.jsx)(n.a,{href:"/SIT_FUSE/docs/use-cases/environmental-monitoring",children:"Use Cases"})]})," for your specific application"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udcac ",(0,t.jsxs)(n.strong,{children:["Join the ",(0,t.jsx)(n.a,{href:"/SIT_FUSE/docs/community/support",children:"Community"})]})," for help and discussions"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"development-installation",children:"Development Installation"}),"\n",(0,t.jsx)(n.p,{children:"For contributors and advanced users who want to modify SIT-FUSE:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Fork the repository on GitHub, then clone your fork\ngit clone https://github.com/YOUR_USERNAME/SIT_FUSE.git\ncd SIT_FUSE\n\n# Create development environment\nconda env create -f environment.yml\nconda activate sit-fuse-dev\n\n# Install in development mode with extra dependencies\npip install -e ".[dev,test,docs]"\n\n# Set up pre-commit hooks\npre-commit install\n\n# Run tests to verify installation\npytest tests/\n'})}),"\n",(0,t.jsx)(n.p,{children:"This development setup includes additional tools for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Code formatting (black, isort)"}),"\n",(0,t.jsx)(n.li,{children:"Linting (flake8, pylint)"}),"\n",(0,t.jsx)(n.li,{children:"Type checking (mypy)"}),"\n",(0,t.jsx)(n.li,{children:"Documentation building (sphinx)"}),"\n",(0,t.jsx)(n.li,{children:"Testing (pytest, coverage)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const t={},l=s.createContext(t);function o(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);